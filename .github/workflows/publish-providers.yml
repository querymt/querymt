name: Build & Publish Provider Plugins

on:
  push:
    branches: [ main ]
    # (optional) add:
    # tags: [ 'v*.*.*' ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.compute.outputs.matrix }}

    steps:
      - name: Check out full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine which plugins need rebuilding
        id: compute
        run: |
          BASE=${{ github.event.before }}
          HEAD=${{ github.sha }}

          # all subfolders under crates/providers
          mapfile -t ALL < <(find crates/providers -maxdepth 1 -mindepth 1 -type d -printf '%f\n')

          if [[ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]]; then
            PROVIDERS=( "${ALL[@]}" )
          # if this is the very first commit (BASE is all zeros), rebuild everything
          elif [[ "$BASE" == "0000000000000000000000000000000000000000" ]]; then
            PROVIDERS=( "${ALL[@]}" )
          else
            # list changed files between BASE and HEAD
            CHANGED=$(git diff --name-only $BASE $HEAD)

            PROVIDERS=()
            for f in $CHANGED; do
              # if the querymt library changed, rebuild/test all plugins
              if [[ $f =~ ^crates/querymt/ ]]; then
                PROVIDERS=( "${ALL[@]}" )
                break
              fi

              # if a provider crate changed, pick it up
              if [[ $f =~ ^crates/providers/([^/]+)/ ]]; then
                name=${BASH_REMATCH[1]}
                # de-dup
                if [[ ! " ${PROVIDERS[*]} " =~ " $name " ]]; then
                  PROVIDERS+=( "$name" )
                fi
              fi
            done
          fi

          if [ ${#PROVIDERS[@]} -eq 0 ]; then
            PROVIDERS=( "noop" )
          fi

          echo "Final plugin list: ${PROVIDERS[*]}"

          # format as JSON list for the matrix
          entries=()
          for p in "${PROVIDERS[@]}"; do
            entries+=( "{\"crate\":\"$p\"}" )
          done
          # note: join on commas, not spaces
          joined=$(IFS=, ; echo "${entries[*]}")
          matrix="{\"include\":[${joined}]}"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  publish-plugins:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}

    steps:
      - name: No crates changed
        if: matrix.crate == 'noop'
        run: echo "✅ No plugin crates to build—skipping."

      - name: Check out code
        if: matrix.crate != 'noop'
        uses: actions/checkout@v3

      - name: Read crate version
        if: matrix.crate != 'noop'
        id: get-version
        run: |
          v=$(grep '^version' crates/providers/${{ matrix.crate }}/Cargo.toml \
                | head -n1 | cut -d'"' -f2)
          echo "VERSION=$v" >> $GITHUB_ENV

      - name: Log in to GHCR
        if: matrix.crate != 'noop'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker image
        if: matrix.crate != 'noop'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.provider
          build-args: |
            PROVIDER_NAME=${{ matrix.crate }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.crate }}:${{ env.VERSION }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.crate }}:latest
          annotations: |
            mt.query.plugin.type=extism
